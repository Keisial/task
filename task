#!/bin/bash

###
# © 2019 Ángel González
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
########################################################################


### DEFAULT CONFIGURATION
FILENAME="$HOME/tasks.csv"
TASKLISTFILENAME="$HOME/tasks.lst"
REPORTPROG=:

# Load user config

: ${XDG_CONFIG_HOME:=$HOME/.config}
if [ -r $XDG_CONFIG_HOME/task/config ]; then
. $XDG_CONFIG_HOME/task/config
fi

set -eu

help() {
cat <<EOF
Available commands:
  task start <name> [@time] [<comment>]
  task stop [@time]
  task push <name> [@time] [<comment>]
  task pop
  task rename <newname>
  task comment <text>
  task report [view|push|tasks]
  task status

EOF
}

loadtasknames() {
  while read name aliases; do
    TASKNAMES["$name"]=1
    for aliasname in $aliases; do
      ALIASES["$aliasname"]="$name"
    done
  done < "$1"
}

validatename() {
  if ! echo "$1" | grep '^[^,"]\+$' > /dev/null; then
    echo Invalid name "$1"
    exit 1
  fi
  if [ "$1" = "`lasttask`" ]; then
    echo Already working on $1
    exit 2
  fi
}

timestamp() {
  ARG="${1:-}"
  if [ "${ARG:0:1}" = "@" ]; then
    date "+%Y-%m-%dT%H:%M:%S" -d "${ARG:1}"
  else
    date "+%Y-%m-%dT%H:%M:%S"
  fi
}

lasttask() {
 test -f "$FILENAME" && tail -n 1 "$FILENAME" | cut -d , -f 4
}

NAME=""
TIMESTAMP=`timestamp`
COMMENT=""
ACTION="${1:-help}"

declare -A TASKNAMES
TASKNAMES=()

declare -A ALIASES
ALIASES=()

case "$ACTION" in
    start|push)
        NAME="$2"
        TIMESTAMP="`timestamp "${3:-}"`"
        test ! -z "${3:-}" && test "${3:0:1}" = "@" && shift
        shift; shift
        COMMENT="${@}"
        validatename "$NAME"
        if [ "$ACTION" = "start" ]; then
            echo Stating work on $NAME $COMMENT
        else
            echo Changing to work on $NAME $COMMENT
        fi
        ;;
    stop)
        NAME="`lasttask`"
        if [ -z "$NAME" ]; then
          echo There is no active task
          exit 1
        fi
        TIMESTAMP="`timestamp "${2:-}"`"
        test ! -z "${2:-}" && test "${2:0:1}" = "@" && shift
        echo Stopping work on $NAME
        NAME=""
        ;;
    pop)
        NAME=""
        {
        IFS=","
        declare -a STACK
        INDEX=0
        while read date host command task comment; do
          case $command in
            push)
              INDEX=$((INDEX + 1))
              ;;
            pop)
              INDEX=$((INDEX - 1))
              ;;
            esac
            STACK[$INDEX]="$task"
        done < "$FILENAME"
        INDEX=$((INDEX - 1))
        if [ "$INDEX" -lt 0 ]; then
          echo No task available in the stack
          exit 1
        fi
        NAME=${STACK[$INDEX]}
        echo Going back to task $NAME
        }
        ;;
    rename)
        LINE=$(wc -l < "$FILENAME")
        NAME=$2
        OLDNAME=$(sed -n "$LINE"p "$FILENAME" | cut -d, -f 4)
        echo Renaming last task from $OLDNAME to $NAME
        sed -i "s/^\([^,]*,[^,]*,[^,]*\),$OLDNAME,/\1,$2,/" "$FILENAME"
        exit 0
        ;;
    comment)
        NAME=`lasttask`
        shift
        COMMENT="$@"
        ;;
    report)
        (
        test -r "$TASKLISTFILENAME" && loadtasknames "$TASKLISTFILENAME"
        IFS=","
        NAME=""
        LASTDATE=""
        COMMENT=""
        while read date host command task comment; do
          case $command in
            start|stop|push|pop)
              if [ ! -z "$NAME" ]; then
                TIMESPENT="$(($(date +%s -d "$date") - $(date +%s -d "$LASTDATE")))"
                case "${2:-view}" in
                  view)
                    echo "$NAME,$LASTDATE,$TIMESPENT,$COMMENT"
                    ;;
                  push)
                    "$REPORTPROG" "$NAME" "$LASTDATE" "$TIMESPENT" "$COMMENT"
                    ;;
                  tasks)
                    echo "$NAME"
                    ;;
                esac
              fi
              NAME=$task
              test ! -z "${task:-}" && test ! -z "${ALIASES["$task"]:-}" && NAME="${ALIASES["$task"]}"
              LASTDATE="$date"
              COMMENT="$comment"
              test "$command" = "stop" && NAME=""
              ;;
            comment)
              COMMENT="$COMMENT $comment"
              ;;
          esac
        done < "$FILENAME"
        )
        exit 0
        ;;
    status)
        < "$FILENAME" sed '/^[^,]*,[^,]*,comment,/d' | tail -1 | (
            IFS=","
            read date host command task comment
            if [ "$command" = "stop" ]; then
                echo "Not working on any task"
            else
                echo "Working on $task since $date"
            fi
        )
        exit 0
        ;;
    help)
        help
        exit 0
        ;;
    *)
        help
        exit 1
esac

echo "$TIMESTAMP,`hostname`,$ACTION,$NAME,$COMMENT" >> "$FILENAME"
